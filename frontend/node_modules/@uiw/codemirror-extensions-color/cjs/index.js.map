{
  "version": 3,
  "names": [
    "ColorType",
    "colorState",
    "WeakMap",
    "colorDecorations",
    "view",
    "widgets",
    "visibleRanges",
    "range",
    "syntaxTree",
    "state",
    "iterate",
    "from",
    "to",
    "enter",
    "type",
    "callExp",
    "doc",
    "sliceString",
    "name",
    "startsWith",
    "match",
    "exec",
    "_",
    "r",
    "g",
    "b",
    "a",
    "hex",
    "rgbToHex",
    "Number",
    "widget",
    "Decoration",
    "ColorWidget",
    "colorType",
    "rgb",
    "color",
    "colorRaw",
    "alpha",
    "replace",
    "side",
    "push",
    "hslMatcher",
    "hlsStringToRGB",
    "hsl",
    "toString",
    "toFullHex",
    "colors",
    "includes",
    "named",
    "hexs",
    "indexOf",
    "set",
    "other",
    "picker",
    "document",
    "createElement",
    "value",
    "dataset",
    "wrapper",
    "appendChild",
    "style",
    "backgroundColor",
    "WidgetType",
    "colorView",
    "showPicker",
    "ViewPlugin",
    "fromClass",
    "decorations",
    "update",
    "docChanged",
    "viewportChanged",
    "readOnly",
    "contentDOM",
    "ariaReadOnly",
    "editable",
    "contentEditable",
    "canBeEdited",
    "changePicker",
    "doms",
    "querySelectorAll",
    "forEach",
    "inp",
    "setAttribute",
    "removeAttribute",
    "v",
    "eventHandlers",
    "change",
    "e",
    "target",
    "nodeName",
    "parentElement",
    "colorraw",
    "data",
    "get",
    "hexToRgb",
    "slash",
    "comma",
    "converted",
    "funName",
    "undefined",
    "trim",
    "RGBToHSL",
    "h",
    "s",
    "l",
    "dispatch",
    "changes",
    "insert",
    "colorTheme",
    "EditorView",
    "baseTheme",
    "width",
    "height",
    "display",
    "borderRadius",
    "marginRight",
    "outline",
    "overflow",
    "verticalAlign",
    "marginTop",
    "background",
    "border",
    "paddingLeft"
  ],
  "sources": [
    "../src/index.ts"
  ],
  "sourcesContent": [
    "import { ViewPlugin, EditorView, ViewUpdate, WidgetType, Decoration, DecorationSet } from '@codemirror/view';\nimport { Extension, Range } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport colors from 'colors-named';\nimport hexs from 'colors-named-hex';\nimport hslMatcher, { hlsStringToRGB, RGBAColor } from 'hsl-matcher';\nimport { toFullHex, rgbToHex, hexToRgb, RGBToHSL } from './utils';\n\nexport enum ColorType {\n  rgb = 'RGB',\n  hex = 'HEX',\n  named = 'NAMED',\n  hsl = 'HSL',\n}\n\nexport interface ColorState {\n  from: number;\n  to: number;\n  alpha: string;\n  colorType: ColorType;\n}\n\nconst colorState = new WeakMap<HTMLInputElement, ColorState>();\n\ntype GetArrayElementType<T extends readonly any[]> = T extends readonly (infer U)[] ? U : never;\n\nfunction colorDecorations(view: EditorView) {\n  const widgets: Array<Range<Decoration>> = [];\n  for (const range of view.visibleRanges) {\n    syntaxTree(view.state).iterate({\n      from: range.from,\n      to: range.to,\n      enter: ({ type, from, to }) => {\n        const callExp: string = view.state.doc.sliceString(from, to);\n        /**\n         * ```\n         * rgb(0 107   128, .5);         ❌ ❌ ❌\n         * rgb( 0 107   128 );           ✅ ✅ ✅\n         * RGB( 0 107   128 );           ✅ ✅ ✅\n         * Rgb( 0 107   128 );           ✅ ✅ ✅\n         * rgb( 0 107 128 / );           ❌ ❌ ❌\n         * rgb( 0 107 128 /   60%);      ✅ ✅ ✅\n         * rgb(0,107,128 / 60%);         ❌ ❌ ❌\n         * rgb( 255, 255, 255 )          ✅ ✅ ✅\n         * rgba( 255, 255, 255 )         ✅ ✅ ✅\n         * rgba( 255, 255  , 255, )      ❌ ❌ ❌\n         * rgba( 255, 255  , 255,  .5 )  ✅ ✅ ✅\n         * rgba( 255 255 255 / 0.5 );    ✅ ✅ ✅\n         * rgba( 255 255 255   0.5 );    ❌ ❌ ❌\n         * rgba( 255 255 255 /  );       ❌ ❌ ❌\n         * ```\n         */\n        if (type.name === 'CallExpression' && callExp.startsWith('rgb')) {\n          const match =\n            /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,?\\s*(\\d{1,3})\\s*(,\\s*\\d*\\.\\d*\\s*)?\\)/i.exec(callExp) ||\n            /rgba?\\(\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\/?\\s*\\d+%)?(\\/\\s*\\d+\\.\\d\\s*)?\\)/i.exec(callExp);\n          if (!match) return;\n          const [_, r, g, b, a] = match;\n          const hex = rgbToHex(Number(r), Number(g), Number(b));\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.rgb,\n              color: hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: a ? a.replace(/(\\/|,)/g, '') : '',\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'CallExpression' && hslMatcher(callExp)) {\n          /**\n           * # valid\n           * hsl(240, 100%, 50%)                           // ✅ comma separated\n           * hsl(240, 100%, 50%, 0.1)                      // ✅ comma separated with opacity\n           * hsl(240, 100%, 50%, 10%)                      // ✅ comma separated with % opacity\n           * hsl(240,100%,50%,0.1)                         // ✅ comma separated without spaces\n           * hsl(180deg, 100%, 50%, 0.1)                   // ✅ hue with 'deg'\n           * hsl(3.14rad, 100%, 50%, 0.1)                  // ✅ hue with 'rad'\n           * hsl(200grad, 100%, 50%, 0.1)                  // ✅ hue with 'grad'\n           * hsl(0.5turn, 100%, 50%, 0.1)                  // ✅ hue with 'turn'\n           * hsl(-240, -100%, -50%, -0.1)                  // ✅ negative values\n           * hsl(+240, +100%, +50%, +0.1)                  // ✅ explicit positive sign\n           * hsl(240.5, 99.99%, 49.999%, 0.9999)           // ✅ non-integer values\n           * hsl(.9, .99%, .999%, .9999)                   // ✅ fraction w/o leading zero\n           * hsl(0240, 0100%, 0050%, 01)                   // ✅ leading zeros\n           * hsl(240.0, 100.00%, 50.000%, 1.0000)          // ✅ trailing decimal zeros\n           * hsl(2400, 1000%, 1000%, 10)                   // ✅ out of range values\n           * hsl(-2400.01deg, -1000.5%, -1000.05%, -100)   // ✅ combination of above\n           * hsl(2.40e+2, 1.00e+2%, 5.00e+1%, 1E-3)        // ✅ scientific notation\n           * hsl(240 100% 50%)                             // ✅ space separated (CSS Color Level 4)\n           * hsl(240 100% 50% / 0.1)                       // ✅ space separated with opacity\n           * hsla(240, 100%, 50%)                          // ✅ hsla() alias\n           * hsla(240, 100%, 50%, 0.1)                     // ✅ hsla() with opacity\n           * HSL(240Deg, 100%, 50%)                        // ✅ case insensitive\n           */\n          const match = hlsStringToRGB(callExp) as RGBAColor;\n          if (!match) return;\n          const { r, g, b } = match;\n          const hex = rgbToHex(Number(r), Number(g), Number(b));\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hsl,\n              color: hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: match.a ? match.a.toString() : '',\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'ColorLiteral') {\n          const [color, alpha] = toFullHex(callExp);\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hex,\n              color,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha,\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'ValueName') {\n          const name = callExp as unknown as GetArrayElementType<typeof colors>;\n          if (colors.includes(name)) {\n            const widget = Decoration.widget({\n              widget: new ColorWidget({\n                colorType: ColorType.named,\n                color: hexs[colors.indexOf(name)],\n                colorRaw: callExp,\n                from,\n                to,\n                alpha: '',\n              }),\n              side: 0,\n            });\n            widgets.push(widget.range(from));\n          }\n        }\n      },\n    });\n  }\n  return Decoration.set(widgets);\n}\n\nclass ColorWidget extends WidgetType {\n  private readonly state: ColorState;\n  private readonly color: string;\n  private readonly colorRaw: string;\n\n  constructor({\n    color,\n    colorRaw,\n    ...state\n  }: ColorState & {\n    color: string;\n    colorRaw: string;\n  }) {\n    super();\n    this.state = state;\n    this.color = color;\n    this.colorRaw = colorRaw;\n  }\n  eq(other: ColorWidget) {\n    return (\n      other.state.colorType === this.state.colorType &&\n      other.color === this.color &&\n      other.state.from === this.state.from &&\n      other.state.to === this.state.to &&\n      other.state.alpha === this.state.alpha\n    );\n  }\n  toDOM() {\n    const picker = document.createElement('input');\n    colorState.set(picker, this.state);\n    picker.type = 'color';\n    picker.value = this.color;\n    picker.dataset['color'] = this.color;\n    picker.dataset['colorraw'] = this.colorRaw;\n    const wrapper = document.createElement('span');\n    wrapper.appendChild(picker);\n    wrapper.dataset['color'] = this.color;\n    wrapper.style.backgroundColor = this.colorRaw;\n    return wrapper;\n  }\n  ignoreEvent() {\n    return false;\n  }\n}\n\nexport const colorView = (showPicker: boolean = true) =>\n  ViewPlugin.fromClass(\n    class ColorView {\n      decorations: DecorationSet;\n      constructor(view: EditorView) {\n        this.decorations = colorDecorations(view);\n      }\n      update(update: ViewUpdate) {\n        if (update.docChanged || update.viewportChanged) {\n          this.decorations = colorDecorations(update.view);\n        }\n        const readOnly = update.view.contentDOM.ariaReadOnly === 'true';\n        const editable = update.view.contentDOM.contentEditable === 'true';\n\n        const canBeEdited = readOnly === false && editable;\n        this.changePicker(update.view, canBeEdited);\n      }\n      changePicker(view: EditorView, canBeEdited: boolean) {\n        const doms = view.contentDOM.querySelectorAll('input[type=color]');\n        doms.forEach((inp) => {\n          if (!showPicker) {\n            inp.setAttribute('disabled', '');\n          } else {\n            canBeEdited ? inp.removeAttribute('disabled') : inp.setAttribute('disabled', '');\n          }\n        });\n      }\n    },\n    {\n      decorations: (v) => v.decorations,\n      eventHandlers: {\n        change: (e, view) => {\n          const target = e.target as HTMLInputElement;\n          if (\n            target.nodeName !== 'INPUT' ||\n            !target.parentElement ||\n            (!target.dataset.color && !target.dataset.colorraw)\n          )\n            return false;\n          const data = colorState.get(target)!;\n          const value = target.value;\n          const rgb = hexToRgb(value);\n          const colorraw = target.dataset.colorraw;\n          const slash = (target.dataset.colorraw || '').indexOf('/') > 4;\n          const comma = (target.dataset.colorraw || '').indexOf(',') > 4;\n          let converted = target.value;\n          if (data.colorType === ColorType.rgb) {\n            let funName = colorraw?.match(/^(rgba?)/) ? colorraw?.match(/^(rgba?)/)![0] : undefined;\n            if (comma) {\n              converted = rgb\n                ? `${funName}(${rgb.r}, ${rgb.g}, ${rgb.b}${data.alpha ? ', ' + data.alpha.trim() : ''})`\n                : value;\n            } else if (slash) {\n              converted = rgb\n                ? `${funName}(${rgb.r} ${rgb.g} ${rgb.b}${data.alpha ? ' / ' + data.alpha.trim() : ''})`\n                : value;\n            } else {\n              converted = rgb ? `${funName}(${rgb.r} ${rgb.g} ${rgb.b})` : value;\n            }\n          } else if (data.colorType === ColorType.hsl) {\n            const rgb = hexToRgb(value);\n            if (rgb) {\n              const { h, s, l } = RGBToHSL(rgb?.r, rgb?.g, rgb?.b);\n              converted = `hsl(${h}deg ${s}% ${l}%${data.alpha ? ' / ' + data.alpha : ''})`;\n            }\n          }\n          view.dispatch({\n            changes: {\n              from: data.from,\n              to: data.to,\n              insert: converted,\n            },\n          });\n          return true;\n        },\n      },\n    },\n  );\n\nexport const colorTheme = EditorView.baseTheme({\n  'span[data-color]': {\n    width: '12px',\n    height: '12px',\n    display: 'inline-block',\n    borderRadius: '2px',\n    marginRight: '0.5ch',\n    outline: '1px solid #00000040',\n    overflow: 'hidden',\n    verticalAlign: 'middle',\n    marginTop: '-2px',\n  },\n  'span[data-color] input[type=\"color\"]': {\n    background: 'transparent',\n    display: 'block',\n    border: 'none',\n    outline: '0',\n    paddingLeft: '24px',\n    height: '12px',\n  },\n  'span[data-color] input[type=\"color\"]::-webkit-color-swatch': {\n    border: 'none',\n    paddingLeft: '24px',\n  },\n});\n\nexport const color: Extension = [colorView(), colorTheme];\n"
  ],
  "mappings": "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"
}