{
  "version": 3,
  "names": [
    "ViewPlugin",
    "EditorView",
    "WidgetType",
    "Decoration",
    "syntaxTree",
    "colors",
    "hexs",
    "hslMatcher",
    "hlsStringToRGB",
    "toFullHex",
    "rgbToHex",
    "hexToRgb",
    "RGBToHSL",
    "ColorType",
    "colorState",
    "WeakMap",
    "colorDecorations",
    "view",
    "widgets",
    "range",
    "visibleRanges",
    "state",
    "iterate",
    "from",
    "to",
    "enter",
    "type",
    "callExp",
    "doc",
    "sliceString",
    "name",
    "startsWith",
    "match",
    "exec",
    "_",
    "r",
    "g",
    "b",
    "a",
    "hex",
    "Number",
    "widget",
    "ColorWidget",
    "colorType",
    "rgb",
    "color",
    "colorRaw",
    "alpha",
    "replace",
    "side",
    "push",
    "hsl",
    "toString",
    "includes",
    "named",
    "indexOf",
    "set",
    "constructor",
    "eq",
    "other",
    "toDOM",
    "picker",
    "document",
    "createElement",
    "value",
    "dataset",
    "wrapper",
    "appendChild",
    "style",
    "backgroundColor",
    "ignoreEvent",
    "colorView",
    "showPicker",
    "fromClass",
    "ColorView",
    "decorations",
    "update",
    "docChanged",
    "viewportChanged",
    "readOnly",
    "contentDOM",
    "ariaReadOnly",
    "editable",
    "contentEditable",
    "canBeEdited",
    "changePicker",
    "doms",
    "querySelectorAll",
    "forEach",
    "inp",
    "setAttribute",
    "removeAttribute",
    "v",
    "eventHandlers",
    "change",
    "e",
    "target",
    "nodeName",
    "parentElement",
    "colorraw",
    "data",
    "get",
    "slash",
    "comma",
    "converted",
    "funName",
    "undefined",
    "trim",
    "h",
    "s",
    "l",
    "dispatch",
    "changes",
    "insert",
    "colorTheme",
    "baseTheme",
    "width",
    "height",
    "display",
    "borderRadius",
    "marginRight",
    "outline",
    "overflow",
    "verticalAlign",
    "marginTop",
    "background",
    "border",
    "paddingLeft"
  ],
  "sources": [
    "../src/index.ts"
  ],
  "sourcesContent": [
    "import { ViewPlugin, EditorView, ViewUpdate, WidgetType, Decoration, DecorationSet } from '@codemirror/view';\nimport { Extension, Range } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport colors from 'colors-named';\nimport hexs from 'colors-named-hex';\nimport hslMatcher, { hlsStringToRGB, RGBAColor } from 'hsl-matcher';\nimport { toFullHex, rgbToHex, hexToRgb, RGBToHSL } from './utils';\n\nexport enum ColorType {\n  rgb = 'RGB',\n  hex = 'HEX',\n  named = 'NAMED',\n  hsl = 'HSL',\n}\n\nexport interface ColorState {\n  from: number;\n  to: number;\n  alpha: string;\n  colorType: ColorType;\n}\n\nconst colorState = new WeakMap<HTMLInputElement, ColorState>();\n\ntype GetArrayElementType<T extends readonly any[]> = T extends readonly (infer U)[] ? U : never;\n\nfunction colorDecorations(view: EditorView) {\n  const widgets: Array<Range<Decoration>> = [];\n  for (const range of view.visibleRanges) {\n    syntaxTree(view.state).iterate({\n      from: range.from,\n      to: range.to,\n      enter: ({ type, from, to }) => {\n        const callExp: string = view.state.doc.sliceString(from, to);\n        /**\n         * ```\n         * rgb(0 107   128, .5);         ❌ ❌ ❌\n         * rgb( 0 107   128 );           ✅ ✅ ✅\n         * RGB( 0 107   128 );           ✅ ✅ ✅\n         * Rgb( 0 107   128 );           ✅ ✅ ✅\n         * rgb( 0 107 128 / );           ❌ ❌ ❌\n         * rgb( 0 107 128 /   60%);      ✅ ✅ ✅\n         * rgb(0,107,128 / 60%);         ❌ ❌ ❌\n         * rgb( 255, 255, 255 )          ✅ ✅ ✅\n         * rgba( 255, 255, 255 )         ✅ ✅ ✅\n         * rgba( 255, 255  , 255, )      ❌ ❌ ❌\n         * rgba( 255, 255  , 255,  .5 )  ✅ ✅ ✅\n         * rgba( 255 255 255 / 0.5 );    ✅ ✅ ✅\n         * rgba( 255 255 255   0.5 );    ❌ ❌ ❌\n         * rgba( 255 255 255 /  );       ❌ ❌ ❌\n         * ```\n         */\n        if (type.name === 'CallExpression' && callExp.startsWith('rgb')) {\n          const match =\n            /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,?\\s*(\\d{1,3})\\s*(,\\s*\\d*\\.\\d*\\s*)?\\)/i.exec(callExp) ||\n            /rgba?\\(\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\/?\\s*\\d+%)?(\\/\\s*\\d+\\.\\d\\s*)?\\)/i.exec(callExp);\n          if (!match) return;\n          const [_, r, g, b, a] = match;\n          const hex = rgbToHex(Number(r), Number(g), Number(b));\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.rgb,\n              color: hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: a ? a.replace(/(\\/|,)/g, '') : '',\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'CallExpression' && hslMatcher(callExp)) {\n          /**\n           * # valid\n           * hsl(240, 100%, 50%)                           // ✅ comma separated\n           * hsl(240, 100%, 50%, 0.1)                      // ✅ comma separated with opacity\n           * hsl(240, 100%, 50%, 10%)                      // ✅ comma separated with % opacity\n           * hsl(240,100%,50%,0.1)                         // ✅ comma separated without spaces\n           * hsl(180deg, 100%, 50%, 0.1)                   // ✅ hue with 'deg'\n           * hsl(3.14rad, 100%, 50%, 0.1)                  // ✅ hue with 'rad'\n           * hsl(200grad, 100%, 50%, 0.1)                  // ✅ hue with 'grad'\n           * hsl(0.5turn, 100%, 50%, 0.1)                  // ✅ hue with 'turn'\n           * hsl(-240, -100%, -50%, -0.1)                  // ✅ negative values\n           * hsl(+240, +100%, +50%, +0.1)                  // ✅ explicit positive sign\n           * hsl(240.5, 99.99%, 49.999%, 0.9999)           // ✅ non-integer values\n           * hsl(.9, .99%, .999%, .9999)                   // ✅ fraction w/o leading zero\n           * hsl(0240, 0100%, 0050%, 01)                   // ✅ leading zeros\n           * hsl(240.0, 100.00%, 50.000%, 1.0000)          // ✅ trailing decimal zeros\n           * hsl(2400, 1000%, 1000%, 10)                   // ✅ out of range values\n           * hsl(-2400.01deg, -1000.5%, -1000.05%, -100)   // ✅ combination of above\n           * hsl(2.40e+2, 1.00e+2%, 5.00e+1%, 1E-3)        // ✅ scientific notation\n           * hsl(240 100% 50%)                             // ✅ space separated (CSS Color Level 4)\n           * hsl(240 100% 50% / 0.1)                       // ✅ space separated with opacity\n           * hsla(240, 100%, 50%)                          // ✅ hsla() alias\n           * hsla(240, 100%, 50%, 0.1)                     // ✅ hsla() with opacity\n           * HSL(240Deg, 100%, 50%)                        // ✅ case insensitive\n           */\n          const match = hlsStringToRGB(callExp) as RGBAColor;\n          if (!match) return;\n          const { r, g, b } = match;\n          const hex = rgbToHex(Number(r), Number(g), Number(b));\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hsl,\n              color: hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: match.a ? match.a.toString() : '',\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'ColorLiteral') {\n          const [color, alpha] = toFullHex(callExp);\n          const widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hex,\n              color,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha,\n            }),\n            side: 0,\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'ValueName') {\n          const name = callExp as unknown as GetArrayElementType<typeof colors>;\n          if (colors.includes(name)) {\n            const widget = Decoration.widget({\n              widget: new ColorWidget({\n                colorType: ColorType.named,\n                color: hexs[colors.indexOf(name)],\n                colorRaw: callExp,\n                from,\n                to,\n                alpha: '',\n              }),\n              side: 0,\n            });\n            widgets.push(widget.range(from));\n          }\n        }\n      },\n    });\n  }\n  return Decoration.set(widgets);\n}\n\nclass ColorWidget extends WidgetType {\n  private readonly state: ColorState;\n  private readonly color: string;\n  private readonly colorRaw: string;\n\n  constructor({\n    color,\n    colorRaw,\n    ...state\n  }: ColorState & {\n    color: string;\n    colorRaw: string;\n  }) {\n    super();\n    this.state = state;\n    this.color = color;\n    this.colorRaw = colorRaw;\n  }\n  eq(other: ColorWidget) {\n    return (\n      other.state.colorType === this.state.colorType &&\n      other.color === this.color &&\n      other.state.from === this.state.from &&\n      other.state.to === this.state.to &&\n      other.state.alpha === this.state.alpha\n    );\n  }\n  toDOM() {\n    const picker = document.createElement('input');\n    colorState.set(picker, this.state);\n    picker.type = 'color';\n    picker.value = this.color;\n    picker.dataset['color'] = this.color;\n    picker.dataset['colorraw'] = this.colorRaw;\n    const wrapper = document.createElement('span');\n    wrapper.appendChild(picker);\n    wrapper.dataset['color'] = this.color;\n    wrapper.style.backgroundColor = this.colorRaw;\n    return wrapper;\n  }\n  ignoreEvent() {\n    return false;\n  }\n}\n\nexport const colorView = (showPicker: boolean = true) =>\n  ViewPlugin.fromClass(\n    class ColorView {\n      decorations: DecorationSet;\n      constructor(view: EditorView) {\n        this.decorations = colorDecorations(view);\n      }\n      update(update: ViewUpdate) {\n        if (update.docChanged || update.viewportChanged) {\n          this.decorations = colorDecorations(update.view);\n        }\n        const readOnly = update.view.contentDOM.ariaReadOnly === 'true';\n        const editable = update.view.contentDOM.contentEditable === 'true';\n\n        const canBeEdited = readOnly === false && editable;\n        this.changePicker(update.view, canBeEdited);\n      }\n      changePicker(view: EditorView, canBeEdited: boolean) {\n        const doms = view.contentDOM.querySelectorAll('input[type=color]');\n        doms.forEach((inp) => {\n          if (!showPicker) {\n            inp.setAttribute('disabled', '');\n          } else {\n            canBeEdited ? inp.removeAttribute('disabled') : inp.setAttribute('disabled', '');\n          }\n        });\n      }\n    },\n    {\n      decorations: (v) => v.decorations,\n      eventHandlers: {\n        change: (e, view) => {\n          const target = e.target as HTMLInputElement;\n          if (\n            target.nodeName !== 'INPUT' ||\n            !target.parentElement ||\n            (!target.dataset.color && !target.dataset.colorraw)\n          )\n            return false;\n          const data = colorState.get(target)!;\n          const value = target.value;\n          const rgb = hexToRgb(value);\n          const colorraw = target.dataset.colorraw;\n          const slash = (target.dataset.colorraw || '').indexOf('/') > 4;\n          const comma = (target.dataset.colorraw || '').indexOf(',') > 4;\n          let converted = target.value;\n          if (data.colorType === ColorType.rgb) {\n            let funName = colorraw?.match(/^(rgba?)/) ? colorraw?.match(/^(rgba?)/)![0] : undefined;\n            if (comma) {\n              converted = rgb\n                ? `${funName}(${rgb.r}, ${rgb.g}, ${rgb.b}${data.alpha ? ', ' + data.alpha.trim() : ''})`\n                : value;\n            } else if (slash) {\n              converted = rgb\n                ? `${funName}(${rgb.r} ${rgb.g} ${rgb.b}${data.alpha ? ' / ' + data.alpha.trim() : ''})`\n                : value;\n            } else {\n              converted = rgb ? `${funName}(${rgb.r} ${rgb.g} ${rgb.b})` : value;\n            }\n          } else if (data.colorType === ColorType.hsl) {\n            const rgb = hexToRgb(value);\n            if (rgb) {\n              const { h, s, l } = RGBToHSL(rgb?.r, rgb?.g, rgb?.b);\n              converted = `hsl(${h}deg ${s}% ${l}%${data.alpha ? ' / ' + data.alpha : ''})`;\n            }\n          }\n          view.dispatch({\n            changes: {\n              from: data.from,\n              to: data.to,\n              insert: converted,\n            },\n          });\n          return true;\n        },\n      },\n    },\n  );\n\nexport const colorTheme = EditorView.baseTheme({\n  'span[data-color]': {\n    width: '12px',\n    height: '12px',\n    display: 'inline-block',\n    borderRadius: '2px',\n    marginRight: '0.5ch',\n    outline: '1px solid #00000040',\n    overflow: 'hidden',\n    verticalAlign: 'middle',\n    marginTop: '-2px',\n  },\n  'span[data-color] input[type=\"color\"]': {\n    background: 'transparent',\n    display: 'block',\n    border: 'none',\n    outline: '0',\n    paddingLeft: '24px',\n    height: '12px',\n  },\n  'span[data-color] input[type=\"color\"]::-webkit-color-swatch': {\n    border: 'none',\n    paddingLeft: '24px',\n  },\n});\n\nexport const color: Extension = [colorView(), colorTheme];\n"
  ],
  "mappings": "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"
}